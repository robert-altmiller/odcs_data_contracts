{
  "tags": ["team:passenger_flights", "scope:test_scope"],
  "schema": [
    {
      "logicalType": "object",
      "name": "baggage",
      "physicalName": "baggage",
      "physicalType": "object",
      "properties": [
        {
          "name": "baggage_id",
          "required": true,
          "logicalType": "bigint",
          "physicalType": "bigint",
          "description": "Unique identifier for the baggage",
          "tags": ["scope:baggage", "pii:false"]
        },
        {
          "name": "ticket_id",
          "required": true,
          "logicalType": "bigint",
          "physicalType": "bigint",
          "description": "Unique identifier for the ticket associated with the baggage",
          "tags": ["scope:baggage", "pii:false"]
        },
        {
          "name": "baggage_type",
          "logicalType": "string",
          "physicalType": "string",
          "description": "Type of baggage, e.g., carry-on, checked",
          "tags": ["scope:baggage", "pii:false"]
        },
        {
          "name": "weight",
          "description": "Weight of the baggage",
          "logicalType": "decimal(10,0)",
          "physicalType": "decimal(10,0)",
          "tags": ["scope:baggage", "pii:false"]
        }
      ],
      "description": "Baggage details associated with tickets",
      "tags": ["category:baggage"]
    },
    {
      "logicalType": "object",
      "name": "flights",
      "physicalName": "flights",
      "physicalType": "object",
      "properties": [
        {
          "name": "flight_id",
          "required": true,
          "logicalType": "bigint",
          "physicalType": "bigint",
          "description": "Unique identifier for the flight",
          "tags": ["scope:flights"]
        },
        {
          "name": "airline",
          "logicalType": "string",
          "physicalType": "string",
          "description": "Name of the airline operating the flight",
          "tags": ["scope:flights"]
        },
        {
          "name": "flight_number",
          "logicalType": "string",
          "physicalType": "string",
          "description": "Flight number assigned by the airline",
          "tags": ["scope:flights"]
        },
        {
          "name": "origin",
          "logicalType": "string",
          "physicalType": "string",
          "description": "Origin airport code",
          "tags": ["scope:flights"]
        },
        {
          "name": "destination",
          "logicalType": "string",
          "physicalType": "string",
          "description": "Destination airport code",
          "tags": ["scope:flights"]
        },
        {
          "name": "departure_time",
          "logicalType": "timestamp",
          "physicalType": "timestamp",
          "description": "Scheduled departure time of the flight",
          "tags": ["scope:flights"]
        },
        {
          "name": "arrival_time",
          "logicalType": "timestamp",
          "physicalType": "timestamp",
          "description": "Scheduled arrival time of the flight",
          "tags": ["scope:flights"]
        },
        {
          "name": "status",
          "logicalType": "string",
          "physicalType": "string",
          "description": "Current status of the flight, e.g., on-time, delayed",
          "tags": ["scope:flights"]
        },
        {
          "name": "ingestion_datetime",
          "logicalType": "timestamp",
          "physicalType": "timestamp",
          "description": "Datetime when the flight data was ingested",
          "tags": ["scope:flights"]
        },
        {
          "name": "passengers",
          "logicalType": "object",
          "physicalType": "ARRAY<STRUCT<passenger_id: BIGINT, seat_number: STRING>>",
          "description": "List of passengers with their IDs and seat numbers",
          "tags": ["scope:flights"]
        },
        {
          "name": "flight_log",
          "logicalType": "object",
          "physicalType": "STRUCT<blocks: ARRAY<STRUCT<text: STRING, title: STRING, type: STRING>>, column_additions: ARRAY<STRING>, column_deletions: ARRAY<STRING>, column_type_mismatches: STRUCT<array_of_structs: STRUCT<actual_type: STRING, expected_type: STRING>>, fail: STRUCT<greaterThan: DOUBLE, greaterThanOrEqual: DOUBLE, lessThan: DOUBLE>, missing_column_names: ARRAY<STRING>, preferredChart: STRING, present_column_names: ARRAY<STRING>, value: DOUBLE, valueLabel: STRING, valueSeries: STRUCT<values: ARRAY<STRUCT<label: STRING, outcome: STRING, value: BIGINT>>>>",
          "description": "Log of flight data changes and quality checks",
          "tags": ["scope:flights"]
        }
      ],
      "description": "Passenger flight information",
      "tags": ["category:flights"]
    }
  ]
}
